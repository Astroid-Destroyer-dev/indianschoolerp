"""initial migration

Revision ID: cfbdb8f6f0d6
Revises: 
Create Date: 2025-07-25 17:07:00.396185

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cfbdb8f6f0d6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sectionmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classmodel.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('roll_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('dob', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', 'other', name='gender'), nullable=False),
    sa.Column('father_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mother_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('blood_group', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('admission_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('aadhar_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('academic_year', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pen', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classmodel.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sectionmodel.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('progressrecord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('academic_year', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('result_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('total_marks', sa.Integer(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('remarks', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classmodel.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sectionmodel.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('progressrecord')
    op.drop_table('student')
    op.drop_table('sectionmodel')
    op.drop_table('user')
    op.drop_table('classmodel')
    # ### end Alembic commands ###
